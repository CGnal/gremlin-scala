package com.tinkerpop.gremlin.scala.filter

import com.tinkerpop.blueprints.impls.tg.TinkerGraphFactory
import com.tinkerpop.gremlin.test.ComplianceTest
import com.tinkerpop.gremlin.scala._
import com.tinkerpop.pipes.Pipe
import com.tinkerpop.blueprints.{ Graph, Vertex }
import org.scalatest.FunSpec
import org.scalatest.matchers.ShouldMatchers
import org.junit.runner.RunWith
import org.scalatest.junit.JUnitRunner

@RunWith(classOf[JUnitRunner])
class DedupStepTest extends FunSpec with ShouldMatchers with TestGraph {

  it("dedups vertices") {
    graph.V.both().dedup.toScalaList.size should be(6) //would be 12 without dedup
  }

  it("dedups vertices based on a property: only emits the object if the object generated by its function hasn't been seen before") {
    graph.V.both().dedup { v: Vertex â‡’ v("lang") }.lang.toScalaList should be(List("java"))
  }

}